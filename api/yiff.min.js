// @ts-nocheck
export default async function handler(t,e){const{postId:n,embed:o=!1}=t.query;if(!n)return e.status(400).json({error:"Post ID not specified!"});const r=t.headers.host||"",a=r.includes("e926")?"e926.net":"e621.net",i=`https://${a}/posts/${n}.json`;try{const t=await fetch(i,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const d=await t.json(),l=d?.post,u=l.file.ext;if(!l||!l.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const g=await fetch(l.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if("true"===o){const t=l.preview?.url,o=`https://${r}/api?postId=${n}`,i=["webm","mp4"].includes(u);var s="",c=l.tags.artist.concat(l.tags.contributor),m=["sound_warning","third-party_edit"],p=c.filter((t=>!m.includes(t)));(l.tags.artist.includes("sound_warning")||l.tags.meta.includes("sound")&&!l.tags.meta.includes("no_sound"))&&(s='<meta property="og:description" content="ðŸ”Š Sound Warning! ðŸ”Š" />');const d=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta name="theme-color" content="#00549e" />\n          <link rel="icon" href="/favicon.ico" />\n          <link rel="apple-touch-icon" href="/favicon.png" />\n          <meta property="title" content="#${n}" />\n          \n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${n} by ${1==p.length?`${p[0]}`:`${p[0]} +${p.length-1}`}" />\n          ${s}\n          <meta property="og:type" content="${i?"video.other":"image"}" />\n          ${i?`\n            <meta property="og:video" content="${o}" />\n            <meta property="og:video:type" content="video/${u}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${t}" />\n            <meta property="og:site_name" content="Video from ${a} â€¢ e179 (${r})">\n          `:`\n            <meta property="og:image" content="${o}" />\n            <meta property="og:site_name" content="Image from ${a} â€¢ e179 (${r})">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta name="twitter:card" content="${i?"player":"summary_large_image"}" />\n          <meta name="twitter:title" content="Post from ${a}" />\n          ${i?`\n            <meta name="twitter:image" content="${t}" />\n            <meta name="twitter:player" content="${o}" />\n            <meta name="twitter:player:width" content="1280" />\n            <meta name="twitter:player:height" content="720" />\n            <meta name="twitter:player:stream" content="${o}" />\n            <meta name="twitter:player:stream:content_type" content="video/${u}" />\n          `:`\n            <meta name="twitter:image" content="${o}" />\n          `}\n        </head>\n        <body>\n            <script>window.location = "https://${a}/posts/${n}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(d)}if(!g.ok)return e.status(g.status).json({error:"Failed to fetch image"});const y=await g.arrayBuffer(),h=Buffer.from(y),f=g.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Disposition",`inline; filename="e179.${u}"`),e.setHeader("Cache-Control","public, max-age=86400"),e.setHeader("Content-Type",f),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(h)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}