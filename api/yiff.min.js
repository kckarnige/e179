// @ts-nocheck
export default async function handler(e,t){const{postId:n,embed:r=!1}=e.query;if(!n)return t.status(400).json({error:"Post ID not specified!"});const o=e.headers.host||"",a=o.includes("e926")?"e926.net":"e621.net",s=`https://${a}/posts/${n}.json`;try{const e=await fetch(s,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!e.ok)return t.status(e.status).json({error:"Failed to fetch post data"});const i=await e.json(),m=i?.post;if(!m||!m.file?.url)return t.status(404).json({error:"Image URL not found in post data"});const p=await fetch(m.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if("true"===r){const e=m.file.ext,r=m.preview?.url,s=`https://${o}/api?postId=${n}`,i=["webm","mp4"].includes(e),p=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta name="theme-color" content="#00549e" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${n}" />\n          <meta property="og:description" content="From ${a}" />\n          <meta property="og:type" content="${i?"video.other":"image"}" />\n          ${i?`\n            <meta property="og:video" content="${s}" />\n            <meta property="og:video:type" content="video/${e}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${r}" />\n            <meta property="og:site_name" content="${a}">\n          `:`\n            <meta property="og:image" content="${s}" />\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta name="twitter:card" content="${i?"player":"summary_large_image"}" />\n          <meta name="twitter:title" content="${escapedTitle}" />\n          <meta name="twitter:image" content="${r}" />\n          ${i?`\n            <meta name="twitter:player" content="${s}" />\n            <meta name="twitter:player:width" content="1280" />\n            <meta name="twitter:player:height" content="720" />\n            <meta name="twitter:player:stream" content="${s}" />\n            <meta name="twitter:player:stream:content_type" content="video/${e}" />\n          `:""}\n        </head>\n        <body>\n          <p>Embed preview for post #${n} from ${a}</p>\n          <a href="https://${a}/posts/${n}" target="_blank" rel="noopener noreferrer">View on ${a}</a>\n        </body>\n        </html>\n      `.trim();return t.setHeader("Content-Type","text/html"),t.status(200).send(p)}if(!p.ok)return t.status(p.status).json({error:"Failed to fetch image"});const c=await p.arrayBuffer(),d=Buffer.from(c),l=p.headers.get("content-type")||"image/jpeg";return t.setHeader("Content-Type",l),t.setHeader("Access-Control-Allow-Origin","*"),t.status(200).send(d)}catch(e){return console.error("Error:",e),t.status(500).json({error:"Failed to fetch from E621",details:e.message})}}