// @ts-nocheck
export default async function handler(t,e){const{postId:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Post ID not specified!"});const o=t.headers.host||"",a=o.includes("e926")?"e926.net":"e621.net",s=`https://${a}/posts/${n}.json`;try{const t=await fetch(s,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const c=await t.json(),p=c?.post;if(!p||!p.file?.url)return e.status(404).json({error:"Image URL not found in post data"});const d=await fetch(p.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if("true"===r){const t=p.file.ext,r=p.preview?.url,s=`https://${o}/api?postId=${n}`,c=["webm","mp4"].includes(t);var i,m=p.tags.artist.length;p.tags.artist.includes("sound_warning")&&(i="ðŸ”Š Sound Warning! ðŸ”Š",m--),p.tags.artist.includes("third-party_edit")&&m--;const d=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta name="theme-color" content="#00549e" />\n          <meta property="title" content="#${n}" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${n}" />\n          <meta property="og:description" content="${i}\n          \n          \n          By ${1==m?`${p.tags.artist[0]}`:`${p.tags.artist[0]} +${m-1}`}" />\n          <meta property="og:type" content="${c?"video.other":"image"}" />\n          <meta property="og:site_name" content="Image from ${a} â€¢ e179 (${o})">\n          ${c?`\n            <meta property="og:video" content="${s}" />\n            <meta property="og:video:type" content="video/${t}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${r}" />\n          `:`\n            <meta property="og:image" content="${s}" />\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta name="twitter:card" content="${c?"player":"summary_large_image"}" />\n          <meta name="twitter:title" content="Post from ${a}" />\n          <meta name="twitter:image" content="${r}" />\n          ${c?`\n            <meta name="twitter:player" content="${s}" />\n            <meta name="twitter:player:width" content="1280" />\n            <meta name="twitter:player:height" content="720" />\n            <meta name="twitter:player:stream" content="${s}" />\n            <meta name="twitter:player:stream:content_type" content="video/${t}" />\n          `:""}\n        </head>\n        <body>\n            <script>window.location = "https://${a}/posts/${n}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(d)}if(!d.ok)return e.status(d.status).json({error:"Failed to fetch image"});const y=await d.arrayBuffer(),l=Buffer.from(y),u=d.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Type",u),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(l)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from E621",details:t.message})}}