// @ts-nocheck
export default async function handler(t,e){const{slug:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Invalid or missing post ID and extension"});const[o,a]=n.split(".");if(!/^\d+$/.test(o))return e.status(400).json({error:"Invalid post ID"});const i=`https://e621.net/posts/${o}.json`,s=t.headers.host||"";var p;p="e.e694.net"==s||"e621.e694.net"==s||"e621.kckarnige.online"==s||"e621-media.vercel.app"==s?"e621.net":"e926.net";try{const t=await fetch(i,{headers:{"User-Agent":"e694/1.2"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const n=await t.json(),g=n?.post,u=a??g.file.ext,y=new Date(g.created_at).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}),h={s:"Safe",q:"Questionable",e:"Explicit"};if("json"===a)return e.status(200).json(n);if(!g||!g.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const f=await fetch(g.file.url,{headers:{"User-Agent":"e694/1.2"}});if("true"===r){const t=g.preview?.url,n="e926.net"==p&&"s"!==g.rating?"https://e694.net/unsafe.png":`https://${s}/${o}.${u}`,r=["webm","mp4"].includes(u);var c="",m=g.tags.artist.concat(g.tags.contributor??[]),l=["sound_warning","third-party_edit","conditional_dnp"],d=m.filter((t=>!l.includes(t)));(g.tags.artist.includes("sound_warning")||g.tags.meta.includes("sound")&&!g.tags.meta.includes("no_sound"))&&(c="\n\nðŸ”Š Sound Warning! ðŸ”Š");const a=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta property="theme-color" content="#00709e" />\n          <meta property="author" content="TEST" />\n          <link rel="icon" href="/favicon.ico" />\n          <meta name="application-name" content="e694">\n          <link rel="apple-touch-icon" href="https://e694.net/favicon.png" />\n          <link rel="icon" type="image/png" sizes="32x32" href="https://e694.net/favicon32.png">\n          <link rel="icon" type="image/png" sizes="16x16" href="https://e694.net/favicon16.png">\n          <meta property="title" content="#${o}" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${o} by ${1===d.length?`${d[0]}`:`${d[0]} +${d.length-1}`}" />\n          <meta property="og:description" content="Posted on ${y}\nRating: ${h[g.rating]}\nScore: ${g.score.total}${c}" />\n          <meta property="og:type" content="${r?"video.other":"image"}" />\n          ${r?`\n            <meta property="og:video" content="${n}" />\n            <meta property="og:video:type" content="video/${u}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${t}" />\n            <meta property="og:site_name" content="Video from ${p} â€¢ e694">\n          `:`\n            <meta property="og:image" content="${n}" />\n            <meta property="og:site_name" content="Image from ${p} â€¢ e694">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta property="twitter:card" content="${r?"player":"summary_large_image"}" />\n          <meta property="twitter:title" content="Post from ${p}" />\n          <meta property="twitter:description" content="Posted on ${y}\nRating: ${h[g.rating]}\nScore: ${g.score.total}${c}" />\n          ${r?`\n            <meta property="twitter:image" content="${t}" />\n            <meta property="twitter:player" content="${n}" />\n            <meta property="twitter:player:width" content="1280" />\n            <meta property="twitter:player:height" content="720" />\n            <meta property="twitter:player:stream" content="${n}" />\n            <meta property="twitter:player:stream:content_type" content="video/${u}" />\n          `:`\n            <meta property="twitter:image" content="${n}" />\n          `}\n        </head>\n        <body>\n            <script>window.location = "https://${p}/posts/${o}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(a)}if(!f.ok)return e.status(f.status).json({error:"Failed to fetch image"});const $=await f.arrayBuffer(),w=Buffer.from($),v=f.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Disposition",`inline; filename="${o}.${u}"`),e.setHeader("Content-Type",v),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(w)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}