// @ts-nocheck
export default async function handler(e,t){const{postId:r}=e.query;if(!r)return t.status(400).json({error:"Post ID not specified!"});const n=e.headers.host||"",o=n.includes("e926")?"e926.net":"e621.net",s=`https://${o}/posts/${r}.json`;try{const e=await fetch(s,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!e.ok)return t.status(e.status).json({error:"Failed to fetch post data"});const a=await e.json(),i=a?.post;if(!i||!i.file?.url)return t.status(404).json({error:"Image URL not found in post data"});const c=await fetch(i.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}}),u=i.file.ext,d=i.preview?.url,m=["webm","mp4"].includes(u);if("true"===embed){const e=`https://${n}/api?postId=${r}`,s=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta property="og:title" content="${`Post #${r} from ${o}`}" />\n          ${m?`\n              <meta property="og:video" content="${e}" />\n              <meta property="og:video:type" content="video/${u}" />\n              <meta property="og:image" content="${d}" />\n            `:`\n              <meta property="og:image" content="${e}" />\n            `}\n          <meta name="twitter:card" content="summary_large_image" />\n          <meta name="theme-color" content="#00549e" />\n        </head>\n        <body>\n          <script>document.href = ${e}<\/script>\n        </body>\n        </html>\n      `.trim();return t.setHeader("Content-Type","text/html"),t.status(200).send(s)}if(!c.ok)return t.status(c.status).json({error:"Failed to fetch image"});const p=await c.arrayBuffer(),f=Buffer.from(p),l=c.headers.get("content-type")||"image/jpeg";return t.setHeader("Content-Type",l),t.setHeader("Access-Control-Allow-Origin","*"),t.status(200).send(f)}catch(e){return console.error("Error:",e),t.status(500).json({error:"Failed to fetch from E621",details:e.message})}}