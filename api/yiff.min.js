// @ts-nocheck
export default async function handler(e,t){const{postId:r,embed:n=!1}=e.query;if(!r)return t.status(400).json({error:"Post ID not specified!"});const o=e.headers.host||"",s=o.includes("e926")?"e926.net":"e621.net",a=`https://${s}/posts/${r}.json`;try{const e=await fetch(a,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!e.ok)return t.status(e.status).json({error:"Failed to fetch post data"});const i=await e.json(),c=i?.post;if(!c||!c.file?.url)return t.status(404).json({error:"Image URL not found in post data"});const u=await fetch(c.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}}),d=c.file.ext,m=c.preview?.url,p=["webm","mp4"].includes(d);if("true"===n){const e=`https://${o}/api?postId=${r}`,n=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta property="og:title" content="${`Post #${r} from ${s}`}" />\n          ${p?`\n              <meta property="og:video" content="${e}" />\n              <meta property="og:video:type" content="video/${d}" />\n              <meta property="og:image" content="${m}" />\n            `:`\n              <meta property="og:image" content="${e}" />\n            `}\n          <meta name="twitter:card" content="summary_large_image" />\n          <meta name="theme-color" content="#00549e" />\n        </head>\n        <body>\n          <script>document.href = ${e}<\/script>\n        </body>\n        </html>\n      `.trim();return t.setHeader("Content-Type","text/html"),t.status(200).send(n)}if(!u.ok)return t.status(u.status).json({error:"Failed to fetch image"});const f=await u.arrayBuffer(),l=Buffer.from(f),y=u.headers.get("content-type")||"image/jpeg";return t.setHeader("Content-Type",y),t.setHeader("Access-Control-Allow-Origin","*"),t.status(200).send(l)}catch(e){return console.error("Error:",e),t.status(500).json({error:"Failed to fetch from E621",details:e.message})}}