// @ts-nocheck
export default async function handler(t,e){const{postId:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Post ID not specified!"});const o=t.headers.host||"",a=o.includes("e926")?"e926.net":"e621.net",s=`https://${a}/posts/${n}.json`;try{const t=await fetch(s,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const m=await t.json(),p=m?.post;if(!p||!p.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const d=await fetch(p.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if("true"===r){const t=p.file.ext,r=p.preview?.url,s=`https://${o}/api?postId=${n}`,m=["webm","mp4"].includes(t);var i="",c=p.tags.artist.length+p.tags.contributor.length;p.tags.artist.includes("sound_warning")&&c--,p.tags.artist.includes("third-party_edit")&&c--,(p.tags.artist.includes("sound_warning")||p.tags.meta.includes("sound")&&!p.tags.meta.includes("no_sound"))&&(i='<meta property="og:description" content="ðŸ”Š Sound Warning! ðŸ”Š" />');const d=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta name="theme-color" content="#00549e" />\n          <link rel="icon" href="/favicon.ico" />\n          <link rel="apple-touch-icon" href="/favicon.png" />\n          <meta property="title" content="#${n}" />\n          \n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${n} by ${1==c?`${p.tags.artist[0]}`:`${p.tags.artist[0]} +${c-1}`}" />\n          ${i}\n          <meta property="og:type" content="${m?"video.other":"image"}" />\n          ${m?`\n            <meta property="og:video" content="${s}" />\n            <meta property="og:video:type" content="video/${t}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${r}" />\n            <meta property="og:site_name" content="Video from ${a} â€¢ e179 (${o})">\n          `:`\n            <meta property="og:image" content="${s}" />\n            <meta property="og:site_name" content="Image from ${a} â€¢ e179 (${o})">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta name="twitter:card" content="${m?"player":"summary_large_image"}" />\n          <meta name="twitter:title" content="Post from ${a}" />\n          ${m?`\n            <meta name="twitter:image" content="${r}" />\n            <meta name="twitter:player" content="${s}" />\n            <meta name="twitter:player:width" content="1280" />\n            <meta name="twitter:player:height" content="720" />\n            <meta name="twitter:player:stream" content="${s}" />\n            <meta name="twitter:player:stream:content_type" content="video/${t}" />\n          `:`\n            <meta name="twitter:image" content="${s}" />\n          `}\n        </head>\n        <body>\n            <script>window.location = "https://${a}/posts/${n}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(d)}if(!d.ok)return e.status(d.status).json({error:"Failed to fetch image"});const l=await d.arrayBuffer(),u=Buffer.from(l),g=d.headers.get("content-type")||"image/gif";return e.setHeader("Content-Type",g),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(u)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from E621",details:t.message})}}