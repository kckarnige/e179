// @ts-nocheck
export default async function handler(t,e){const{slug:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Invalid or missing post ID and extension"});const[o,a]=n.split(".");if(!/^\d+$/.test(o))return e.status(400).json({error:"Invalid post ID"});const i=t.headers.host||"",s=i.includes("e926")?"e926.net":"e621.net",p=`https://e621.net/posts/${o}.json`;try{const t=await fetch(p,{headers:{"User-Agent":"e179/1.0"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const n=await t.json(),y=n?.post,g=a??y.file.ext;if("json"===a)return e.status(200).json(n);if(!y||!y.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const h=await fetch(y.file.url,{headers:{"User-Agent":"e179/1.0 (e621 Proxy)"}});if("true"===r){const t=y.preview?.url,n=`https://${i}/${o}.${g}`,r=["webm","mp4"].includes(g);var c,l="",d=(y.tags.artist??[]).concat(y.tags.contributor??[]),m=["sound_warning","third-party_edit","conditional_dnp"],u=d.filter((t=>!m.includes(t)));(y.tags.artist.includes("sound_warning")||y.tags.meta.includes("sound")&&!y.tags.meta.includes("no_sound"))&&(l='<meta property="og:description" content="ðŸ”Š Sound Warning! ðŸ”Š" />'),c=1==u.length?`${u[0]}`:`${u[0]} +${u.length-1}`;const a=new Date(y.created_at).toLocaleString("en-US",{dateStyle:"long",timeStyle:"short"}),p=`\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width, initial-scale=1.0">\n  <meta property="theme-color" content="#00709e" />\n  <link rel="icon" href="/favicon.ico" />\n  <link rel="apple-touch-icon" href="/favicon.png" />\n  <meta property="title" content="#${o}" />\n  <meta property="al:android:app_name" content="Medium"/>\n  <meta property="article:published_time" content="${y.created_at}"/>\n\n  \x3c!-- Open Graph --\x3e\n  <meta property="og:title" content="#${o} by ${c}" />\n  ${l}\n  <meta property="og:type" content="article" />\n  ${r?`\n    <meta property="og:video" content="${n}" />\n    <meta property="og:video:type" content="video/${g}" />\n    <meta property="og:video:width" content="1280" />\n    <meta property="og:video:height" content="720" />\n    <meta property="og:image" content="${t}" />\n    <meta property="og:site_name" content="Video from ${s} â€¢ e179 (${i})">\n  `:`\n    <meta property="og:image" content="${n}" />\n    <meta property="og:site_name" content="Image from ${s} â€¢ e179 (${i})">\n  `}\n\n  \x3c!-- Twitter --\x3e\n  <meta property="twitter:card" content="${r?"player":"summary_large_image"}" />\n  <meta property="twitter:title" content="Post from ${s}" />\n  ${r?`\n    <meta property="twitter:image" content="${t}" />\n    <meta property="twitter:player" content="${n}" />\n    <meta property="twitter:player:width" content="1280" />\n    <meta property="twitter:player:height" content="720" />\n    <meta property="twitter:player:stream" content="${n}" />\n    <meta property="twitter:player:stream:content_type" content="video/${g}" />\n  `:`\n    <meta property="twitter:image" content="${n}" />\n  `}\n</head>\n<body>\n  <article>\n    <h1>Post #${o}</h1>\n    <p>Originally posted on <a href="https://${s}/posts/${o}">${s}</a></p>\n    <figure><img src="${r?t:n}" alt="Preview" style="max-width: 100%; height: auto;"></figure>\n    <footer>By ${c} â€” ${a}</footer>\n  </article>\n  <script>window.location = "https://${s}/posts/${o}"<\/script>\n</body>\n</html>\n`.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(p)}if(!h.ok)return e.status(h.status).json({error:"Failed to fetch image"});const $=await h.arrayBuffer(),f=Buffer.from($),w=h.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Disposition",`inline; filename="${o}.${g}"`),e.setHeader("Cache-Control","public, max-age=86400"),e.setHeader("Content-Type",w),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(f)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}