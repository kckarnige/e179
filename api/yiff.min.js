// @ts-nocheck
export default async function handler(t,e){const{slug:n,embed:o=!1}=t.query;if(!n)return e.status(400).json({error:"Invalid or missing post ID and extension"});const[r,a]=n.split(".");if(!/^\d+$/.test(r))return e.status(400).json({error:"Invalid post ID"});const i=`https://e621.net/posts/${r}.json`,s=t.headers.host||"";var p;p="e.e694.net"==s||"e621.e694.net"==s||"e621.kckarnige.online"==s||"e621-media.vercel.app"==s?"e621.net":"e926.net";try{const n=await fetch(i,{headers:{"User-Agent":"e694/1.2"}});if(!n.ok)return e.status(n.status).json({error:"Failed to fetch post data"});const g=await n.json(),u=g?.post,h=a??u.file.ext,y=new Date(u.created_at).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}),f={s:"Safe",q:"Questionable",e:"Explicit"};if("json"===a)return e.status(200).json(g);if(!u||!u.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const $=await fetch(u.file.url,{headers:{"User-Agent":"e694/1.2"}}),w=t.headers.accept||"";if("json+oembed"===a||w.includes("application/json+oembed"))return e.setHeader("Content-Type","application/json+oembed"),e.status(200).json({author_name:"TEST",provider_name:"TEST",timestamp:y,footer:{text:"Bluesky",icon_url:"https://bsky.app/static/apple-touch-icon.png",proxy_icon_url:"https://images-ext-1.discordapp.net/external/fOtqW7lF4a7HYINwfrkJNTaWjVlzy6NC7NtjERcNLDw/https/bsky.app/static/apple-touch-icon.png"}});if("true"===o){const t=u.preview?.url,n="e926.net"==p&&"s"!==u.rating?"https://e694.net/unsafe.png":`https://${s}/${r}.${h}`,o=["webm","mp4"].includes(h);var c="",l=u.tags.artist.concat(u.tags.contributor??[]),m=["sound_warning","third-party_edit","conditional_dnp"],d=l.filter((t=>!m.includes(t)));(u.tags.artist.includes("sound_warning")||u.tags.meta.includes("sound")&&!u.tags.meta.includes("no_sound"))&&(c="\n\nðŸ”Š Sound Warning! ðŸ”Š");const a=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta property="theme-color" content="#00709e" />\n          <link rel="icon" href="/favicon.ico" />\n          <meta name="application-name" content="e694">\n          <link rel="apple-touch-icon" href="https://e694.net/favicon.png" />\n          <link rel="alternate" type="application/json+oembed" href="https://${s}/${r}.json+oembed">\n          <link rel="icon" type="image/png" sizes="32x32" href="https://e694.net/favicon32.png">\n          <link rel="icon" type="image/png" sizes="16x16" href="https://e694.net/favicon16.png">\n          <meta property="title" content="#${r}" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${r} by ${1===d.length?`${d[0]}`:`${d[0]} +${d.length-1}`}" />\n          <meta property="og:description" content="Posted on ${y}\nRating: ${f[u.rating]}\nScore: ${u.score.total}${c}" />\n          <meta property="og:type" content="${o?"video.other":"image"}" />\n          ${o?`\n            <meta property="og:video" content="${n}" />\n            <meta property="og:video:type" content="video/${h}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${t}" />\n            <meta property="og:site_name" content="Video from ${p} â€¢ e694">\n          `:`\n            <meta property="og:image" content="${n}" />\n            <meta property="og:site_name" content="Image from ${p} â€¢ e694">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta property="twitter:card" content="${o?"player":"summary_large_image"}" />\n          <meta property="twitter:title" content="Post from ${p}" />\n          <meta property="twitter:description" content="Posted on ${y}\nRating: ${f[u.rating]}\nScore: ${u.score.total}${c}" />\n          ${o?`\n            <meta property="twitter:image" content="${t}" />\n            <meta property="twitter:player" content="${n}" />\n            <meta property="twitter:player:width" content="1280" />\n            <meta property="twitter:player:height" content="720" />\n            <meta property="twitter:player:stream" content="${n}" />\n            <meta property="twitter:player:stream:content_type" content="video/${h}" />\n          `:`\n            <meta property="twitter:image" content="${n}" />\n          `}\n        </head>\n        <body>\n            <script>window.location = "https://${p}/posts/${r}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(a)}if(!$.ok)return e.status($.status).json({error:"Failed to fetch image"});const v=await $.arrayBuffer(),j=Buffer.from(v),_=$.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Disposition",`inline; filename="${r}.${h}"`),e.setHeader("Content-Type",_),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(j)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}