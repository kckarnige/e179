// @ts-nocheck
export default async function handler(t,e){const{slug:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Invalid or missing post ID and extension"});const[o,a]=n.split(".");if(!/^\d+$/.test(o))return e.status(400).json({error:"Invalid post ID"});const i=`https://e621.net/posts/${o}.json`,s=t.headers.host||"";var p;p="e.e694.net"==s||"e621.e694.net"==s||"e621.kckarnige.online"==s||"e621-media.vercel.app"==s?"e621.net":"e926.net";try{const n=await fetch(i,{headers:{"User-Agent":"e694/1.2"}});if(!n.ok)return e.status(n.status).json({error:"Failed to fetch post data"});const g=await n.json(),u=g?.post,y=a??u.file.ext,$=new Date(u.created_at).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}),f={s:"Safe",q:"Questionable",e:"Explicit"};if("json"===a)return e.status(200).json(g);if(!u||!u.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const w=await fetch(u.file.url,{headers:{"User-Agent":"e694/1.2"}}),v=t.headers.accept?.includes("application/json+oembed");if("true"===r||v){const t=u.preview?.url,n="e926.net"==p&&"s"!==u.rating?"https://e694.net/unsafe.png":`https://${s}/${o}.${y}`,r=["webm","mp4"].includes(y);var c,l="",m=u.tags.artist.concat(u.tags.contributor??[]),d=["sound_warning","third-party_edit","conditional_dnp"],h=m.filter((t=>!d.includes(t)));if((u.tags.artist.includes("sound_warning")||u.tags.meta.includes("sound")&&!u.tags.meta.includes("no_sound"))&&(l="\n\nðŸ”Š Sound Warning! ðŸ”Š"),c=1===h.length?`${h[0]}`:`${h[0]} +${h.length-1}`,v){const t={version:"1.0",type:"rich",provider_name:"e694",provider_url:"https://e694.net",title:`Post #${o}`,author_name:c??"Unknown",author_url:`https://${p}/posts/${o}`,html:`<iframe src="https://${s}/posts/${o}?embed=true" width="600" height="400" frameborder="0" allowfullscreen></iframe>`,width:600,height:400};return e.setHeader("Content-Type","application/json+oembed"),e.status(200).json(t)}const a=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta property="theme-color" content="#00709e" />\n          <link rel="icon" href="/favicon.ico" />\n          <meta name="application-name" content="e694">\n          <link rel="apple-touch-icon" href="https://e694.net/favicon.png" />\n          <link rel="icon" type="image/png" sizes="32x32" href="https://e694.net/favicon32.png">\n          <link rel="icon" type="image/png" sizes="16x16" href="https://e694.net/favicon16.png">\n          <meta property="title" content="#${o}" />\n          <link rel="alternate" type="application/json+oembed" href="https://${s}/posts/${o}" title="e694 Embed" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${o} by ${c}" />\n          <meta property="og:description" content="Posted on ${$}\nRating: ${f[u.rating]}\nScore: ${u.score.total}${l}" />\n          <meta property="og:type" content="${r?"video.other":"image"}" />\n          ${r?`\n            <meta property="og:video" content="${n}" />\n            <meta property="og:video:type" content="video/${y}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${t}" />\n            <meta property="og:site_name" content="Video from ${p} â€¢ e694">\n          `:`\n            <meta property="og:image" content="${n}" />\n            <meta property="og:site_name" content="Image from ${p} â€¢ e694">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta property="twitter:card" content="${r?"player":"summary_large_image"}" />\n          <meta property="twitter:title" content="Post from ${p}" />\n          <meta property="twitter:description" content="Posted on ${$}\nRating: ${f[u.rating]}\nScore: ${u.score.total}${l}" />\n          ${r?`\n            <meta property="twitter:image" content="${t}" />\n            <meta property="twitter:player" content="${n}" />\n            <meta property="twitter:player:width" content="1280" />\n            <meta property="twitter:player:height" content="720" />\n            <meta property="twitter:player:stream" content="${n}" />\n            <meta property="twitter:player:stream:content_type" content="video/${y}" />\n          `:`\n            <meta property="twitter:image" content="${n}" />\n          `}\n        </head>\n        <body>\n            <script>window.location = "https://${p}/posts/${o}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(a)}if(!w.ok)return e.status(w.status).json({error:"Failed to fetch image"});const j=await w.arrayBuffer(),_=Buffer.from(j),b=w.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Disposition",`inline; filename="${o}.${y}"`),e.setHeader("Content-Type",b),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(_)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}