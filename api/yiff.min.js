// @ts-nocheck
export default async function handler(t,e){const{slug:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Invalid or missing post ID and extension"});const[o,a]=n.split(".");if(!/^\d+$/.test(o))return e.status(400).json({error:"Invalid post ID"});const i=t.headers.host||"",s=i.includes("e926")||i.includes("safe")?"e926.net":"e621.net",p=`https://${s}/posts/${o}.json`;try{const t=await fetch(p,{headers:{"User-Agent":"e694/1.0"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const n=await t.json(),g=n?.post,y=a??g.file.ext,h=new Date(g.created_at).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}),$={s:"Safe",q:"Questionable",e:"Explicit"};if("json"===a)return e.status(200).json(n);if(!g||!g.file?.url)return e.status(404).json({error:"Media URL not found in post data"});const f=await fetch(g.file.url,{headers:{"User-Agent":"e694/1.0 (e621 Proxy)"}});if("true"===r){const t=g.preview?.url,n=`https://${i}/${o}.${y}`,r=["webm","mp4"].includes(y);var c,d="",l=g.tags.artist.concat(g.tags.contributor??[]),m=["sound_warning","third-party_edit","conditional_dnp"],u=l.filter((t=>!m.includes(t)));(g.tags.artist.includes("sound_warning")||g.tags.meta.includes("sound")&&!g.tags.meta.includes("no_sound"))&&(d="\n\nðŸ”Š Sound Warning! ðŸ”Š"),"e926.net"===s?o.includes([5423459,5423465])&&(c="milkislla2"):c=1===u.length?`${u[0]}`:`${u[0]} +${u.length-1}`;const a=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta property="theme-color" content="#00709e" />\n          <link rel="icon" href="/favicon.ico" />\n          <link rel="apple-touch-icon" href="/favicon.png" />\n          <meta property="title" content="#${o}" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${o} by ${c}" />\n          <meta property="og:description" content="Posted on ${h}\nRating: ${$[g.rating]}\nScore: ${g.score.total}${d}" />\n          <meta property="og:type" content="${r?"video.other":"image"}" />\n          ${r?`\n            <meta property="og:video" content="${n}" />\n            <meta property="og:video:type" content="video/${y}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${t}" />\n            <meta property="og:site_name" content="Video from ${s} â€¢ e694">\n          `:`\n            <meta property="og:image" content="${n}" />\n            <meta property="og:site_name" content="Image from ${s} â€¢ e694">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta property="twitter:card" content="${r?"player":"summary_large_image"}" />\n          <meta property="twitter:title" content="Post from ${s}" />\n          <meta property="twitter:description" content="Posted on ${h}\nRating: ${$[g.rating]}\nScore: ${g.score.total}${d}" />\n          ${r?`\n            <meta property="twitter:image" content="${t}" />\n            <meta property="twitter:player" content="${n}" />\n            <meta property="twitter:player:width" content="1280" />\n            <meta property="twitter:player:height" content="720" />\n            <meta property="twitter:player:stream" content="${n}" />\n            <meta property="twitter:player:stream:content_type" content="video/${y}" />\n          `:`\n            <meta property="twitter:image" content="${n}" />\n          `}\n        </head>\n        <body>\n            <script>window.location = "https://${s}/posts/${o}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(a)}if(!f.ok)return e.status(f.status).json({error:"Failed to fetch image"});const w=await f.arrayBuffer(),v=Buffer.from(w),j=f.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Disposition",`inline; filename="${o}.${y}"`),e.setHeader("Content-Type",j),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(v)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}