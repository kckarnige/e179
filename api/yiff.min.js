// @ts-nocheck
export default async function handler(t,e){const{postId:n,embed:r=!1}=t.query;if(!n)return e.status(400).json({error:"Post ID not specified!"});const o=t.headers.host||"",a=o.includes("e926")?"e926.net":"e621.net",s=`https://${a}/posts/${n}.json`;try{const t=await fetch(s,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const i=await t.json(),m=i?.post;if(!m||!m.file?.url)return e.status(404).json({error:"Image URL not found in post data"});const c=await fetch(m.file.url,{headers:{"User-Agent":"MyE621Proxy/1.0 (by yourusername on e621)"}});if("true"===r){const t=m.file.ext,r=m.preview?.url,s=`https://${o}/api?postId=${n}`,i=["webm","mp4"].includes(t),c=`Post #${n} from ${a}`,p=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta name="theme-color" content="#00549e" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="${c}" />\n          <meta property="og:type" content="${i?"video.other":"image"}" />\n          <meta property="og:image" content="${r}" />\n          ${i?`\n            <meta property="og:video" content="${s}" />\n            <meta property="og:video:type" content="video/${t}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n          `:""}\n\n          \x3c!-- Twitter --\x3e\n          <meta name="twitter:card" content="${i?"player":"summary_large_image"}" />\n          <meta name="twitter:title" content="${c}" />\n          <meta name="twitter:image" content="${r}" />\n          ${i?`\n            <meta name="twitter:player" content="${s}" />\n            <meta name="twitter:player:width" content="1280" />\n            <meta name="twitter:player:height" content="720" />\n            <meta name="twitter:player:stream" content="${s}" />\n            <meta name="twitter:player:stream:content_type" content="video/${t}" />\n          `:""}\n        </head>\n        <body>\n          <p>Embed preview for post #${n} from ${a}</p>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(p)}if(!c.ok)return e.status(c.status).json({error:"Failed to fetch image"});const p=await c.arrayBuffer(),d=Buffer.from(p),l=c.headers.get("content-type")||"image/jpeg";return e.setHeader("Content-Type",l),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(d)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from E621",details:t.message})}}